#!/usr/bin/env python3
"""
–ö–∞–ª–∏–±—Ä–∞—Ç–æ—Ä –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∏–∫–æ–≤ –≤ hCaptcha.
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.
"""

import time
from pathlib import Path
from playwright.sync_api import sync_playwright


def interactive_calibration():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç"""
    with sync_playwright() as playwright:
        browser = playwright.chromium.launch(headless=False)
        
        try:
            page = browser.new_page()
            
            print("üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
            page.goto("http://127.0.0.1:5000", wait_until="load")
            
            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–∞–ø—á—É
            page.wait_for_selector('iframe[title*="—Ñ–ª–∞–∂–∫–æ–º"]', timeout=10000)
            checkbox_frame = page.frame_locator('iframe[title*="—Ñ–ª–∞–∂–∫–æ–º"]')
            checkbox_frame.locator('#checkbox').click()
            
            time.sleep(5)
            
            # –ù–∞—Ö–æ–¥–∏–º iframe —Å canvas
            challenge_frame = None
            frames = page.frames
            
            for frame in frames:
                try:
                    if 'hcaptcha.com' in frame.url and 'challenge' in frame.url:
                        challenge_frame = frame
                        break
                except:
                    continue
            
            if not challenge_frame:
                print("‚ùå iframe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            print("üéØ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –ö–ê–õ–ò–ë–†–û–í–ö–ê –ö–û–û–†–î–ò–ù–ê–¢")
            print("="*50)
            
            # –°–Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏
            standard_positions = [
                (83, 150, "–≤–µ—Ä—Ö-–ª–µ–≤–æ [0]"),
                (250, 150, "–≤–µ—Ä—Ö-—Ü–µ–Ω—Ç—Ä [1]"), 
                (417, 150, "–≤–µ—Ä—Ö-–ø—Ä–∞–≤–æ [2]"),
                (83, 290, "—Ü–µ–Ω—Ç—Ä-–ª–µ–≤–æ [3]"),
                (250, 290, "—Ü–µ–Ω—Ç—Ä-—Ü–µ–Ω—Ç—Ä [4]"),
                (417, 290, "—Ü–µ–Ω—Ç—Ä-–ø—Ä–∞–≤–æ [5]"),
                (83, 430, "–Ω–∏–∑-–ª–µ–≤–æ [6]"),
                (250, 430, "–Ω–∏–∑-—Ü–µ–Ω—Ç—Ä [7]"),
                (417, 430, "–Ω–∏–∑-–ø—Ä–∞–≤–æ [8]")
            ]
            
            print("üìç –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ—Ç–∫–∏ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ—Ç–∫–∏
            for i, (x, y, desc) in enumerate(standard_positions):
                try:
                    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ canvas –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (—É–º–Ω–æ–∂–∞–µ–º –Ω–∞ 2)
                    canvas_x = x * 2
                    canvas_y = y * 2
                    
                    challenge_frame.evaluate(f"""
                        const canvas = document.querySelector('canvas');
                        if (canvas) {{
                            const ctx = canvas.getContext('2d');
                            
                            // –ö—Ä–∞—Å–Ω—ã–π –∫—Ä—É–≥
                            ctx.fillStyle = 'red';
                            ctx.beginPath();
                            ctx.arc({canvas_x}, {canvas_y}, 20, 0, 2 * Math.PI);
                            ctx.fill();
                            
                            // –ë–µ–ª—ã–π –Ω–æ–º–µ—Ä
                            ctx.fillStyle = 'white';
                            ctx.font = 'bold 16px Arial';
                            ctx.textAlign = 'center';
                            ctx.fillText('{i}', {canvas_x}, {canvas_y} + 5);
                        }}
                    """)
                    
                    print(f"   {desc}: CSS({x},{y}) ‚Üí Canvas({canvas_x},{canvas_y})")
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ {i}: {e}")
            
            print(f"\nüëÄ –ü–†–û–í–ï–†–¨–¢–ï –ë–†–ê–£–ó–ï–†:")
            print(f"üìç –î–æ–ª–∂–Ω–æ –±—ã—Ç—å 9 –∫—Ä–∞—Å–Ω—ã—Ö –∫—Ä—É–≥–æ–≤ —Å –Ω–æ–º–µ—Ä–∞–º–∏ 0-8")
            print(f"‚úÖ –ï—Å–ª–∏ –∫—Ä—É–≥–∏ –¢–û–ß–ù–û –≤ —Ü–µ–Ω—Ç—Ä–∞—Ö —è—á–µ–µ–∫ - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ")
            print(f"‚ùå –ï—Å–ª–∏ –∫—Ä—É–≥–∏ —Å–º–µ—â–µ–Ω—ã - –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞")
            
            input("\n–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
            
            # –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ—á–Ω—ã–µ –∫–ª–∏–∫–∏
            print(f"\nüñ±Ô∏è –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–´–• –ö–õ–ò–ö–û–í:")
            print(f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–∫–∞ (0-8): ", end="")
            
            try:
                test_cell = int(input().strip())
                if 0 <= test_cell <= 8:
                    x, y, desc = standard_positions[test_cell]
                    
                    print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ —è—á–µ–π–∫–µ {test_cell}: {desc}")
                    
                    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–∫
                    canvas_x = x * 2
                    canvas_y = y * 2
                    
                    # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
                    canvas_info = challenge_frame.locator('canvas').bounding_box()
                    abs_x = canvas_info['x'] + x  # –ò—Å–ø–æ–ª—å–∑—É–µ–º CSS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è  
                    abs_y = canvas_info['y'] + y
                    
                    print(f"üìç –ê–±—Å–æ–ª—é—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({abs_x}, {abs_y})")
                    
                    # –†–µ–∞–ª—å–Ω—ã–π –∫–ª–∏–∫
                    page.mouse.click(abs_x, abs_y)
                    
                    # –û—Ç–º–µ—á–∞–µ–º –º–µ—Å—Ç–æ –∫–ª–∏–∫–∞ –∑–µ–ª–µ–Ω—ã–º
                    challenge_frame.evaluate(f"""
                        const canvas = document.querySelector('canvas');
                        if (canvas) {{
                            const ctx = canvas.getContext('2d');
                            ctx.fillStyle = 'lime';
                            ctx.beginPath();
                            ctx.arc({canvas_x}, {canvas_y}, 15, 0, 2 * Math.PI);
                            ctx.fill();
                            ctx.fillStyle = 'black';
                            ctx.font = 'bold 16px Arial';
                            ctx.textAlign = 'center';
                            ctx.fillText('‚úì', {canvas_x}, {canvas_y} + 5);
                        }}
                    """)
                    
                    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω!")
                    print(f"üü¢ –ï—Å–ª–∏ —è—á–µ–π–∫–∞ –ø–æ–¥—Å–≤–µ—Ç–∏–ª–∞—Å—å - –∫–ª–∏–∫ –ø—Ä–æ—à–µ–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                    
                    time.sleep(3)  # –î–∞–µ–º –≤—Ä–µ–º—è —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏")
                    
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 8")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–∫–∞: {e}")
            
            input("\n–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ Enter...")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏: {e}")
        finally:
            browser.close()


if __name__ == "__main__":
    print("üîß –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç")
    print("="*40)
    
    interactive_calibration()
