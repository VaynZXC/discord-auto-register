#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç canvas –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç hCaptcha
"""

import time
from pathlib import Path
from playwright.sync_api import sync_playwright


def debug_canvas_coordinates():
    """–û—Ç–ª–∞–∂–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç canvas"""
    with sync_playwright() as playwright:
        browser = playwright.chromium.launch(headless=False)
        
        try:
            page = browser.new_page()
            
            print("üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
            page.goto("http://127.0.0.1:5000", wait_until="load")
            
            # –ö–ª–∏–∫–∞–µ–º –ø–æ —á–µ–∫–±–æ–∫—Å—É
            page.wait_for_selector('iframe[title*="—Ñ–ª–∞–∂–∫–æ–º"]', timeout=10000)
            checkbox_frame = page.frame_locator('iframe[title*="—Ñ–ª–∞–∂–∫–æ–º"]')
            checkbox_frame.locator('#checkbox').click()
            
            # –ñ–¥–µ–º –∑–∞–¥–∞–Ω–∏–µ
            time.sleep(5)
            
            # –ù–∞—Ö–æ–¥–∏–º iframe —Å canvas
            challenge_frame = None
            frames = page.frames
            
            for frame in frames:
                try:
                    if 'hcaptcha.com' in frame.url and 'challenge' in frame.url:
                        challenge_frame = frame
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω iframe: {frame.title()}")
                        break
                except:
                    continue
            
            if not challenge_frame:
                print("‚ùå iframe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ canvas
            canvas_info = challenge_frame.evaluate("""
                (() => {
                    const canvas = document.querySelector('canvas');
                    if (!canvas) return {error: "Canvas –Ω–µ –Ω–∞–π–¥–µ–Ω"};
                    
                    const rect = canvas.getBoundingClientRect();
                    const style = window.getComputedStyle(canvas);
                    
                    return {
                        // –õ–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑–º–µ—Ä—ã canvas
                        width: canvas.width,
                        height: canvas.height,
                        
                        // CSS —Ä–∞–∑–º–µ—Ä—ã
                        cssWidth: parseFloat(style.width),
                        cssHeight: parseFloat(style.height),
                        
                        // –ü–æ–∑–∏—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                        boundingRect: {
                            x: rect.x,
                            y: rect.y, 
                            width: rect.width,
                            height: rect.height,
                            left: rect.left,
                            top: rect.top,
                            right: rect.right,
                            bottom: rect.bottom
                        },
                        
                        // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
                        scaleX: canvas.width / rect.width,
                        scaleY: canvas.height / rect.height
                    };
                })()
            """)
            
            print("\nüìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û CANVAS:")
            print("="*50)
            print(f"üî¢ –õ–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑–º–µ—Ä—ã: {canvas_info['width']}x{canvas_info['height']}")
            print(f"üé® CSS —Ä–∞–∑–º–µ—Ä—ã: {canvas_info['cssWidth']}x{canvas_info['cssHeight']}")
            print(f"üìç –ü–æ–∑–∏—Ü–∏—è: ({canvas_info['boundingRect']['x']}, {canvas_info['boundingRect']['y']})")
            print(f"üìè Bounding rect: {canvas_info['boundingRect']}")
            print(f"‚öñÔ∏è –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ: X={canvas_info['scaleX']:.3f}, Y={canvas_info['scaleY']:.3f}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ –≤ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö —Å–µ—Ç–∫–∏ 3x3
            test_positions = [
                (83, 150, "–≤–µ—Ä—Ö-–ª–µ–≤–æ"),
                (250, 150, "–≤–µ—Ä—Ö-—Ü–µ–Ω—Ç—Ä"), 
                (417, 150, "–≤–µ—Ä—Ö-–ø—Ä–∞–≤–æ"),
                (83, 290, "—Ü–µ–Ω—Ç—Ä-–ª–µ–≤–æ"),
                (250, 290, "—Ü–µ–Ω—Ç—Ä-—Ü–µ–Ω—Ç—Ä"),
                (417, 290, "—Ü–µ–Ω—Ç—Ä-–ø—Ä–∞–≤–æ"),
                (83, 430, "–Ω–∏–∑-–ª–µ–≤–æ"),
                (250, 430, "–Ω–∏–∑-—Ü–µ–Ω—Ç—Ä"),
                (417, 430, "–Ω–∏–∑-–ø—Ä–∞–≤–æ")
            ]
            
            print(f"\nüéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–õ–ò–ö–û–í –í –°–¢–ê–ù–î–ê–†–¢–ù–´–• –ü–û–ó–ò–¶–ò–Ø–•:")
            print("="*50)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ—Ç–∫–∏ –≤–æ –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
            for i, (x, y, desc) in enumerate(test_positions):
                try:
                    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å —É—á–µ—Ç–æ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
                    if canvas_info['scaleX'] != 1.0 or canvas_info['scaleY'] != 1.0:
                        # Canvas –∏–º–µ–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
                        canvas_x = int(x * canvas_info['scaleX'])
                        canvas_y = int(y * canvas_info['scaleY'])
                    else:
                        canvas_x, canvas_y = x, y
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ—Ç–º–µ—Ç–∫—É
                    challenge_frame.evaluate(f"""
                        const canvas = document.querySelector('canvas');
                        if (canvas) {{
                            const ctx = canvas.getContext('2d');
                            ctx.fillStyle = 'red';
                            ctx.beginPath();
                            ctx.arc({canvas_x}, {canvas_y}, 8, 0, 2 * Math.PI);
                            ctx.fill();
                            
                            ctx.fillStyle = 'white';
                            ctx.font = '12px Arial';
                            ctx.fillText('{i}', {canvas_x}-4, {canvas_y}+3);
                        }}
                    """)
                    
                    print(f"–ü–æ–∑–∏—Ü–∏—è {i}: {desc} - GPT({x},{y}) ‚Üí Canvas({canvas_x},{canvas_y})")
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ {i}: {e}")
            
            print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±—Ä–∞—É–∑–µ—Ä - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫—Ä–∞—Å–Ω—ã–µ —Ç–æ—á–∫–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ 0-8")
            print(f"üí° –ï—Å–ª–∏ —Ç–æ—á–∫–∏ –ù–ï –≤ —Ü–µ–Ω—Ç—Ä–∞—Ö —è—á–µ–µ–∫, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω—É–∂–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
            
            input("–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏...")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏: {e}")
        finally:
            browser.close()


if __name__ == "__main__":
    print("üîç –û—Ç–ª–∞–¥–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç canvas")
    print("="*30)
    
    debug_canvas_coordinates()
