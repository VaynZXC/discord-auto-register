#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Ç–∫–∞–ª–∏–±—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Å –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π.
"""

import time
from pathlib import Path
from playwright.sync_api import sync_playwright


def test_calibrated_coordinates():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–∫–∞–ª–∏–±—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã"""
    with sync_playwright() as playwright:
        browser = playwright.chromium.launch(headless=False)
        
        try:
            page = browser.new_page()
            page.goto("http://127.0.0.1:5000", wait_until="load")
            
            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–∞–ø—á—É
            page.wait_for_selector('iframe[title*="—Ñ–ª–∞–∂–∫–æ–º"]', timeout=10000)
            checkbox_frame = page.frame_locator('iframe[title*="—Ñ–ª–∞–∂–∫–æ–º"]')
            checkbox_frame.locator('#checkbox').click()
            time.sleep(5)
            
            # –ù–∞—Ö–æ–¥–∏–º iframe
            challenge_frame = None
            for frame in page.frames:
                try:
                    if 'hcaptcha.com' in frame.url and 'challenge' in frame.url:
                        challenge_frame = frame
                        break
                except:
                    continue
            
            if not challenge_frame:
                print("‚ùå iframe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            print("üéØ –¢–ï–°–¢ –û–¢–ö–ê–õ–ò–ë–†–û–í–ê–ù–ù–´–• –ö–û–û–†–î–ò–ù–ê–¢")
            print("="*40)
            
            # –ù–æ–≤—ã–µ –æ—Ç–∫–∞–ª–∏–±—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            calibrated_coords = [
                (85, 130),   (250, 130),  (415, 130),   # –†—è–¥ 1
                (85, 260),   (250, 260),  (415, 260),   # –†—è–¥ 2  
                (85, 390),   (250, 390),  (415, 390)    # –†—è–¥ 3
            ]
            
            colors = ['red', 'orange', 'yellow', 'green', 'blue', 'purple', 'pink', 'cyan', 'lime']
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ—Ç–∫–∏ –≤ –Ω–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏
            for i, (x, y) in enumerate(calibrated_coords):
                try:
                    # Canvas –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (x2 –¥–ª—è –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤)
                    canvas_x = x * 2
                    canvas_y = y * 2
                    
                    color = colors[i]
                    
                    challenge_frame.evaluate(f"""
                        const canvas = document.querySelector('canvas');
                        if (canvas) {{
                            const ctx = canvas.getContext('2d');
                            
                            // –ë–æ–ª—å—à–æ–π —Ü–≤–µ—Ç–Ω–æ–π –∫—Ä—É–≥
                            ctx.fillStyle = '{color}';
                            ctx.beginPath();
                            ctx.arc({canvas_x}, {canvas_y}, 25, 0, 2 * Math.PI);
                            ctx.fill();
                            
                            // –ë–µ–ª–∞—è –æ–±–≤–æ–¥–∫–∞
                            ctx.strokeStyle = 'white';
                            ctx.lineWidth = 4;
                            ctx.stroke();
                            
                            // –ß–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä
                            ctx.fillStyle = 'black';
                            ctx.font = 'bold 20px Arial';
                            ctx.textAlign = 'center';
                            ctx.fillText('{i}', {canvas_x}, {canvas_y} + 7);
                        }}
                    """)
                    
                    print(f"   [{i}] CSS({x},{y}) ‚Üí Canvas({canvas_x},{canvas_y}) ‚Üí {color}")
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ {i}: {e}")
            
            print(f"\nüëÄ –ü–†–û–í–ï–†–ö–ê –¢–û–ß–ù–û–°–¢–ò:")
            print(f"‚úÖ –ï—Å–ª–∏ —Ü–≤–µ—Ç–Ω—ã–µ –∫—Ä—É–≥–∏ –¢–û–ß–ù–û –≤ —Ü–µ–Ω—Ç—Ä–∞—Ö —è—á–µ–µ–∫ - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ!")
            print(f"‚ùå –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ —Å–º–µ—â–µ–Ω—ã - –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è")
            
            input("\n–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ Enter...")
            
            # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç –∫–ª–∏–∫–∞
            print(f"\nüñ±Ô∏è –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –¢–ï–°–¢ –ö–õ–ò–ö–ê:")
            print(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–∫–∞ (0-8): ", end="")
            
            try:
                test_num = int(input().strip())
                if 0 <= test_num <= 8:
                    x, y = calibrated_coords[test_num]
                    
                    print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ —è—á–µ–π–∫–µ {test_num} –≤ –ø–æ–∑–∏—Ü–∏–∏ ({x}, {y})")
                    
                    # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
                    canvas_bbox = challenge_frame.locator('canvas').bounding_box()
                    abs_x = canvas_bbox['x'] + x
                    abs_y = canvas_bbox['y'] + y
                    
                    print(f"üìç –ê–±—Å–æ–ª—é—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({abs_x}, {abs_y})")
                    
                    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–ª–∏–∫ —Å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏
                    page.mouse.move(abs_x - 20, abs_y - 20)
                    page.wait_for_timeout(300)
                    page.mouse.move(abs_x, abs_y)
                    page.wait_for_timeout(200)
                    page.mouse.click(abs_x, abs_y)
                    
                    # –û—Ç–º–µ—á–∞–µ–º –º–µ—Å—Ç–æ –∫–ª–∏–∫–∞ –∑–µ–ª–µ–Ω—ã–º
                    canvas_x, canvas_y = x * 2, y * 2
                    challenge_frame.evaluate(f"""
                        const canvas = document.querySelector('canvas');
                        if (canvas) {{
                            const ctx = canvas.getContext('2d');
                            ctx.fillStyle = 'lime';
                            ctx.beginPath();
                            ctx.arc({canvas_x}, {canvas_y}, 35, 0, 2 * Math.PI);
                            ctx.fill();
                            ctx.fillStyle = 'black';
                            ctx.font = 'bold 24px Arial';
                            ctx.textAlign = 'center';
                            ctx.fillText('‚úì', {canvas_x}, {canvas_y} + 8);
                        }}
                    """)
                    
                    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω!")
                    print(f"üü¢ –ï—Å–ª–∏ —è—á–µ–π–∫–∞ –ø–æ–¥—Å–≤–µ—Ç–∏–ª–∞—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–Ω—ã–µ")
                    
                    time.sleep(3)
                    
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 8")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–∫–∞: {e}")
            
            input("\n–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Enter...")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        finally:
            browser.close()


if __name__ == "__main__":
    print("üî¨ –¢–µ—Å—Ç –æ—Ç–∫–∞–ª–∏–±—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç")
    print("="*35)
    
    test_calibrated_coordinates()
