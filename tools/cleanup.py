#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –∞–Ω–∞–ª–∏–∑–∞.
–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã —Å timestamp –∏ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ.
"""

import os
import glob
from pathlib import Path


def cleanup_analysis_folder():
    """–û—á–∏—â–∞–µ—Ç –ø–∞–ø–∫—É analysis –æ—Ç —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å timestamp"""
    analysis_dir = Path("analysis")
    
    if not analysis_dir.exists():
        print("üìÅ –ü–∞–ø–∫–∞ analysis –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
        
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
    patterns = [
        "captcha_*.png",
        "main_page_*.html", 
        "challenge_frame_*.html",
        "selectors_*.txt"
    ]
    
    removed_count = 0
    
    for pattern in patterns:
        files = list(analysis_dir.glob(pattern))
        for file in files:
            try:
                file.unlink()
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: {file.name}")
                removed_count += 1
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {file.name}: {e}")
    
    print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {removed_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
    remaining = list(analysis_dir.glob("*"))
    if remaining:
        print(f"üìã –û—Å—Ç–∞–ª–∏—Å—å —Ñ–∞–π–ª—ã:")
        for file in remaining:
            print(f"   - {file.name}")
    else:
        print("üìã –ü–∞–ø–∫–∞ analysis –ø—É—Å—Ç–∞")


def cleanup_solutions_folder():
    """–û—á–∏—â–∞–µ—Ç –ø–∞–ø–∫—É solutions –æ—Ç —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å timestamp"""
    solutions_dir = Path("solutions")
    
    if not solutions_dir.exists():
        print("üìÅ –ü–∞–ø–∫–∞ solutions –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
        
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
    patterns = [
        "analysis_*.json",
        "solution_*.txt"
    ]
    
    removed_count = 0
    
    for pattern in patterns:
        files = list(solutions_dir.glob(pattern))
        for file in files:
            try:
                file.unlink()
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: {file.name}")
                removed_count += 1
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {file.name}: {e}")
    
    print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ solutions –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {removed_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
    remaining = list(solutions_dir.glob("*"))
    if remaining:
        print(f"üìã –û—Å—Ç–∞–ª–∏—Å—å —Ñ–∞–π–ª—ã:")
        for file in remaining:
            print(f"   - {file.name}")
    else:
        print("üìã –ü–∞–ø–∫–∞ solutions –ø—É—Å—Ç–∞")


if __name__ == "__main__":
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –∞–Ω–∞–ª–∏–∑–∞...")
    print("="*40)
    
    cleanup_analysis_folder()
    print()
    cleanup_solutions_folder()
    
    print("\n‚ú® –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
